# -*- coding: utf-8 -*-
"""Homework5_4650.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fu0GVNHlcUGpYyfyKD5a0Aq_0_pH5CGm
"""

#pip install spacy
#!pip install newsapi-python
#!python -m spacy download en_core_web_lg

import pickle
import spacy
import en_core_web_lg
import pandas as pd
from newsapi import NewsApiClient
from spacy.tokenizer import Tokenizer
from spacy.lang.en import English
import string

nlp_eng = en_core_web_lg.load()
newsapi = NewsApiClient(api_key='8dc0ec1fccae4fed8e8f11a1ff39bd96')

articles = newsapi.get_everything(q='coronavirus', language='en',
                              from_param='2021-09-25', to='2021-10-17', 
                              sort_by='relevancy', page=1, page_size = 100)
dados = []
results = []
spacy_stopwords = spacy.lang.en.stop_words.STOP_WORDS
filename = 'articlesCOVID.pckl'
pickle.dump(articles, open(filename, 'wb'))
filename = 'articlesCOVID.pckl'
loaded_model = pickle.load(open(filename, 'rb'))
filepath = '/content/articlesCOVID.pckl'
pickle.dump(loaded_model, open(filepath, 'wb'))

pos_tag = ['PROPN', 'VERB', 'NOUN']
def get_keywords_eng(content):
    doc = nlp_eng(content)
    result = []
    punctuation = string.punctuation
    for token in doc:
      if (token.pos_ in pos_tag):
        result.append(token.text)
    return result

for content in df.content.values:
    results.append([('#' + x[0]) for x in Counter(get_keywords_eng(content)).most_common(5)])
df['keywords'] = results

df.to_csv(r'/content/articlesCOVID.pckl.csv')

for i, article in enumerate(articles):
    for x in articles['articles']:
        title = x['title']
        description = x['description']
        content = x['content']
        date = x["publishedAt"]
        dados.append({'title':title, 'date':date, 'desc':description, 'content':content})
df = pd.DataFrame(dados)
df = df.dropna()
df.head()

text = str(results)
wordcloud = WordCloud(max_font_size=50, max_words=100, background_color="white").generate(text)
plt.figure()
plt.imshow(wordcloud, interpolation="bilinear")
plt.axis("off")
plt.show()